name: Test Suite
on:
  push:
  pull_request:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
permissions:
  contents: read
env:
  FORCE_JAVASCRIPT_ACTIONS_TO_NODE24: true
jobs:
  test:
    if: github.event_name != 'pull_request_target' || (github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.fork)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Checkout pull request merge ref
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ format('refs/pull/{0}/merge', github.event.pull_request.number) }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v1
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          uv pip install --system pytest pytest-cov coverage
          if [ -f requirements.txt ]; then uv pip install --system -r requirements.txt; fi
      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term --maxfail=1 --disable-warnings -q
      - name: Upload coverage
        if: ${{ github.event_name != 'pull_request_target' && hashFiles('coverage.xml') != '' && secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: python
          fail_ci_if_error: true
