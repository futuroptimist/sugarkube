name: ci

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python test deps
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      - name: Install bats and mDNS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            avahi-daemon \
            avahi-utils \
            bats \
            build-essential \
            cmake \
            dbus \
            libcurl4-openssl-dev \
            libdw-dev \
            libnss-mdns \
            zlib1g-dev \
            binutils-dev \
            libiberty-dev

      - name: Ensure Avahi services are running
        run: |
          sudo systemctl start dbus
          sudo systemctl start avahi-daemon
          sudo systemctl status avahi-daemon --no-pager

      - name: Build and install kcov
        run: |
          git clone --depth=1 https://github.com/SimonKagstrom/kcov.git
          cd kcov
          cmake -B build
          cmake --build build
          sudo cmake --install build

      - name: Run Bash tests under kcov
        env:
          KCOV_OUT: ${{ github.workspace }}/coverage/kcov
        run: |
          mkdir -p "$KCOV_OUT"
          # Run bats via kcov so executed shell scripts are tracked.
          # Limit to our repo to avoid measuring system files.
          kcov --include-path="${GITHUB_WORKSPACE}/scripts" \
               --exclude-pattern="/usr,/opt,/lib,/bin,/sbin" \
               "$KCOV_OUT" \
               bats --recursive tests/bats

      - name: Run Python tests with coverage
        id: pytest
        continue-on-error: true
        run: |
          pytest -q --cov=scripts --cov=tests --cov-report=xml:coverage/python-coverage.xml

      - name: Upload to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          directory: coverage
          files: |
            coverage/python-coverage.xml
          fail_ci_if_error: true
          verbose: true

      - name: Fail if Python tests failed
        if: steps.pytest.outcome == 'failure'
        run: |
          echo "Pytest failed; see previous logs for details." >&2
          exit 1
