#cloud-config
package_update: true
package_upgrade: true
apt:
  sources:
    cloudflare:
      source: "deb [arch=arm64] https://pkg.cloudflare.com/ bookworm main"
      keyid: FBA8C0EE63617C5EED695C43254B391D8CACCBF8
      keyserver: https://keyserver.ubuntu.com
packages:
  - docker.io
  - docker-compose-plugin
  - curl
  - git
  - cloudflared
write_files:
  - path: /opt/sugarkube/.cloudflared.env
    permissions: '0600'
    content: |
      # Inject with TUNNEL_TOKEN or TUNNEL_TOKEN_FILE env var or edit after boot
      TUNNEL_TOKEN=""
  - path: /etc/systemd/system/cloudflared-compose.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Cloudflare Tunnel via docker compose
      Requires=docker.service
      After=docker.service network-online.target
      Wants=network-online.target

      [Service]
      Type=oneshot
      WorkingDirectory=/opt/sugarkube
      ExecStart=/usr/bin/docker compose -f /opt/sugarkube/docker-compose.cloudflared.yml up -d
      ExecStop=/usr/bin/docker compose -f /opt/sugarkube/docker-compose.cloudflared.yml down
      RemainAfterExit=yes
      Restart=on-failure
      RestartSec=5s

      [Install]
      WantedBy=multi-user.target
  - path: /etc/apt/apt.conf.d/80-retries
    permissions: '0644'
    content: |
      Acquire::Retries "5";
      Acquire::http::Timeout "30";
      Acquire::https::Timeout "30";
  - path: /opt/projects/token.place/docker-compose.tokenplace.yml
    permissions: '0644'
    content: |
      version: '3'
      services:
        tokenplace:
          build:
            context: /opt/projects/token.place
            dockerfile: docker/Dockerfile.server
          ports:
            - "5000:5000"
  - path: /etc/systemd/system/tokenplace.service
    permissions: '0644'
    content: |
      [Unit]
      Description=token.place server via docker compose
      Requires=docker.service
      After=docker.service network-online.target
      Wants=network-online.target

      [Service]
      Type=oneshot
      WorkingDirectory=/opt/projects/token.place
      ExecStart=/usr/bin/docker compose -f docker-compose.tokenplace.yml up -d
      ExecStop=/usr/bin/docker compose -f docker-compose.tokenplace.yml down
      RemainAfterExit=yes
      Restart=on-failure
      RestartSec=5s

      [Install]
      WantedBy=multi-user.target
  - path: /etc/systemd/system/dspace.service
    permissions: '0644'
    content: |
      [Unit]
      Description=dspace frontend via docker compose
      Requires=docker.service
      After=docker.service network-online.target
      Wants=network-online.target

      [Service]
      Type=oneshot
      WorkingDirectory=/opt/projects/dspace/frontend
      ExecStartPre=-/usr/bin/cp -n .env.example .env
      ExecStart=/usr/bin/docker compose up -d
      ExecStop=/usr/bin/docker compose down
      RemainAfterExit=yes
      Restart=on-failure
      RestartSec=5s

      [Install]
      WantedBy=multi-user.target
runcmd:
  - [bash, -c, 'id pi >/dev/null 2>&1 && usermod -aG docker pi || true']
  - [bash, -c, 'mkdir -p /opt/sugarkube']
  - [bash, -c, 'id pi >/dev/null 2>&1 && chown -R pi:pi /opt/sugarkube || true']
  - [systemctl, daemon-reexec]   # reload systemd units
  - [systemctl, enable, --now, docker]
  - [bash, -c, '[ -d /opt/projects/token.place ] && systemctl enable --now tokenplace.service || echo "token.place repo missing; skipping service"']
  - [bash, -c, '[ -d /opt/projects/dspace ] && systemctl enable --now dspace.service || echo "dspace repo missing; skipping service"']
  - [bash, -c, 'apt-get clean && rm -rf /var/lib/apt/lists/*']
  - |
      if grep -q 'TUNNEL_TOKEN=""' /opt/sugarkube/.cloudflared.env; then
        echo 'Cloudflare token missing; not starting tunnel'
      else
        systemctl enable --now cloudflared-compose.service
      fi
